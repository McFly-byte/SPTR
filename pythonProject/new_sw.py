# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_sw.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import threading

import numpy as np
import pymysql
from PyQt5.QtCore import QUrl, QObject, pyqtSignal, QCoreApplication
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
from PyQt5.QtWidgets import QMessageBox, QMainWindow, QWidget, QLineEdit, QSizePolicy, QVBoxLayout
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
import matplotlib.pyplot as plt

import cos
import data_process
import qiangdu
import glgl
import sankey



# ### 自定义信号槽，可实现带参槽函数
# 信号对象
class QTypeSignal(QObject):
    # 定义一个信号
    sendmsg = pyqtSignal(object, object)

    def __init__(self):
        super(QTypeSignal, self).__init__()

X,Y = [],[] # 困惑度曲线的数据就保存在此中

# 槽对象
class QTypeSlot(QObject):
    def __init__(self):
        super(QTypeSlot, self).__init__()

    # 槽对象里的槽函数
    def get(self, x=[], y=[]):
        global X, Y
        X = x
        Y = y


class Ui_MainWindow(object):
    zqd = []
    x, y = [], []
    db,tb,user,pwd = "","","",""
    isconnected = False
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 914)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 20, 1600, 900))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")
        # self.tabWidget.tabBar().hide() # 可隐藏切换键
        self.tabWidget.setCurrentIndex(0)  # 默认显示第0个tab

        # ## Tab 0 数据库连接
        self.tab_0 = QtWidgets.QWidget()
        self.tab_0.setObjectName("tab_0")
        self.connect_button = QtWidgets.QPushButton(self.tab_0)
        self.connect_button.setGeometry(QtCore.QRect(720, 470, 93, 28))
        self.connect_button.setObjectName("connect_button")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.tab_0)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(620, 150, 281, 251))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.db_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.db_lbl.setObjectName("db_lbl")
        self.horizontalLayout_2.addWidget(self.db_lbl)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.db_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.db_ledt.setObjectName("db_ledt")
        self.horizontalLayout_2.addWidget(self.db_ledt)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem3)
        self.tb_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.tb_lbl.setObjectName("tb_lbl")
        self.horizontalLayout_7.addWidget(self.tb_lbl)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem4)
        self.tb_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.tb_ledt.setObjectName("tb_ledt")
        self.horizontalLayout_7.addWidget(self.tb_ledt)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem5)
        self.verticalLayout_2.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem6)
        self.user_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.user_lbl.setObjectName("user_lbl")
        self.horizontalLayout_8.addWidget(self.user_lbl)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem7)
        self.user_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.user_ledt.setObjectName("user_ledt")
        self.horizontalLayout_8.addWidget(self.user_ledt)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem8)
        self.verticalLayout_2.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem9)
        self.pwd_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.pwd_lbl.setObjectName("pwd_lbl")
        self.horizontalLayout_9.addWidget(self.pwd_lbl)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem10)
        self.pwd_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.pwd_ledt.setObjectName("pwd_ledt")
        self.pwd_ledt.setEchoMode(QLineEdit.Password)
        self.horizontalLayout_9.addWidget(self.pwd_ledt)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem11)
        self.verticalLayout_2.addLayout(self.horizontalLayout_9)
        self.tabWidget.addTab(self.tab_0, "")

        # ## Tab 1 预处理 + LDA + 困惑度
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.perplexity_button = QtWidgets.QPushButton(self.tab_1)
        self.perplexity_button.setGeometry(QtCore.QRect(1340, 730, 189, 28))
        self.perplexity_button.setObjectName("perplexity_button")
        # self.label = QtWidgets.QLabel(self.tab_1)
        # self.label.setGeometry(QtCore.QRect(30, 30, 861, 551))
        # self.label.setObjectName("label")
        # self.label_2 = QtWidgets.QLabel(self.tab_1)
        # self.label_2.setGeometry(QtCore.QRect(930, 30, 631, 611))
        # self.label_2.setObjectName("label_2")
        # 创建web窗体
        self.browser = QWebEngineView(self.tab_1)
        self.browser.setGeometry(QtCore.QRect(30, 30, 860, 550))
        self.browser.setObjectName("web_browser")
        # pyqtgraph
        self.pw1 = pg.PlotWidget(self.tab_1)
        self.pw1.setGeometry(QtCore.QRect(930, 30, 630, 560))
        self.pw1.setObjectName("pw1")
        self.group_lda = QtWidgets.QGroupBox(self.tab_1)
        self.group_lda.setGeometry(QtCore.QRect(100, 610, 731, 171))
        self.group_lda.setObjectName("group_lda")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.group_lda)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(30, 30, 291, 91))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem12)
        self.lda_year1_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.lda_year1_lbl.setObjectName("lda_year1_lbl")
        self.horizontalLayout_3.addWidget(self.lda_year1_lbl)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem13)
        self.lda_year1_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.lda_year1_ledt.setObjectName("lda_year1_ledt")
        self.horizontalLayout_3.addWidget(self.lda_year1_ledt)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem14)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem15)
        self.lda_year2_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.lda_year2_lbl.setObjectName("lda_year2_lbl")
        self.horizontalLayout_10.addWidget(self.lda_year2_lbl)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem16)
        self.lda_year2_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.lda_year2_ledt.setObjectName("lda_year2_ledt")
        self.horizontalLayout_10.addWidget(self.lda_year2_ledt)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem17)
        self.verticalLayout_3.addLayout(self.horizontalLayout_10)
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.group_lda)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(390, 20, 321, 131))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_23.addItem(spacerItem18)
        self.lda_attr_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.lda_attr_lbl.setObjectName("lda_attr_lbl")
        self.horizontalLayout_23.addWidget(self.lda_attr_lbl)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_23.addItem(spacerItem19)
        self.lda_attr_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.lda_attr_ledt.setObjectName("lda_attr_ledt")
        self.horizontalLayout_23.addWidget(self.lda_attr_ledt)
        self.verticalLayout_6.addLayout(self.horizontalLayout_23)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_24.addItem(spacerItem20)
        self.lda_n_topics_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.lda_n_topics_lbl.setObjectName("lda_n_topics_lbl")
        self.horizontalLayout_24.addWidget(self.lda_n_topics_lbl)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_24.addItem(spacerItem21)
        self.lda_n_topics_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.lda_n_topics_ledt.setObjectName("lda_n_topics_ledt")
        self.horizontalLayout_24.addWidget(self.lda_n_topics_ledt)
        self.verticalLayout_6.addLayout(self.horizontalLayout_24)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem22)
        self.lda_n_top_words_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.lda_n_top_words_lbl.setObjectName("lda_n_top_words_lbl")
        self.horizontalLayout_25.addWidget(self.lda_n_top_words_lbl)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem23)
        self.lda_n_top_words_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.lda_n_top_words_ledt.setObjectName("lda_n_top_words_ledt")
        self.horizontalLayout_25.addWidget(self.lda_n_top_words_ledt)
        self.verticalLayout_6.addLayout(self.horizontalLayout_25)
        self.lda_button = QtWidgets.QPushButton(self.tab_1)
        self.lda_button.setGeometry(QtCore.QRect(1340, 680, 189, 28))
        self.lda_button.setObjectName("lda_button")
        self.group_lda_2 = QtWidgets.QGroupBox(self.tab_1)
        self.group_lda_2.setGeometry(QtCore.QRect(930, 680, 351, 101))
        self.group_lda_2.setObjectName("group_lda_2")
        self.layoutWidget = QtWidgets.QWidget(self.group_lda_2)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 30, 291, 51))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem24 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem24)
        self.p_n_max_topics_lbl = QtWidgets.QLabel(self.layoutWidget)
        self.p_n_max_topics_lbl.setObjectName("p_n_max_topics_lbl")
        self.horizontalLayout_4.addWidget(self.p_n_max_topics_lbl)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem25)
        self.p_n_max_topics_ledt = QtWidgets.QLineEdit(self.layoutWidget)
        self.p_n_max_topics_ledt.setObjectName("p_n_max_topics_ledt")
        self.horizontalLayout_4.addWidget(self.p_n_max_topics_ledt)
        spacerItem26 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem26)

        self.data_process_button = QtWidgets.QPushButton(self.tab_1)
        self.data_process_button.setGeometry(QtCore.QRect(1340, 630, 189, 28))
        self.data_process_button.setObjectName("data_process_button")
        self.tabWidget.addTab(self.tab_1, "")

        # ## Tab 2 主题强度
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.qiangdu_button = QtWidgets.QPushButton(self.tab_2)
        self.qiangdu_button.setGeometry(QtCore.QRect(1140, 560, 170, 40))
        self.qiangdu_button.setObjectName("qiangdu_button")
        self.qiangdu_pic_button_1 = QtWidgets.QPushButton(self.tab_2)
        self.qiangdu_pic_button_1.setGeometry(QtCore.QRect(1080, 630, 70, 40))
        self.qiangdu_pic_button_1.setObjectName("qiangdu_pic_button_1")
        self.qiangdu_pic_button_2 = QtWidgets.QPushButton(self.tab_2)
        self.qiangdu_pic_button_2.setGeometry(QtCore.QRect(1180, 630, 70, 40))
        self.qiangdu_pic_button_2.setObjectName("qiangdu_pic_button_2")
        self.qiangdu_pic_button_3 = QtWidgets.QPushButton(self.tab_2)
        self.qiangdu_pic_button_3.setGeometry(QtCore.QRect(1280, 630, 70, 40))
        self.qiangdu_pic_button_3.setObjectName("qiangdu_pic_button_3")
        # self.label_3 = QtWidgets.QLabel(self.tab_2)
        # self.label_3.setGeometry(QtCore.QRect(100, 80, 881, 661))
        # self.label_3.setObjectName("label_3")
        # 画布
        self.canvas_group = QtWidgets.QGroupBox(self.tab_2)
        self.canvas_group.setGeometry(QtCore.QRect(100, 80, 880, 660))
        self.canvas_group.setObjectName("canvas_group")
        self.figure = plt.figure(figsize=(24, 10))
        self.canvas = FigureCanvas(self.figure)
        self.toolbar = NavigationToolbar(self.canvas, self.canvas_group)
        layout = QVBoxLayout(self.canvas_group)
        layout.addWidget(self.toolbar)
        layout.addWidget(self.canvas)
        # 右侧参数区
        self.group_lda_3 = QtWidgets.QGroupBox(self.tab_2)
        self.group_lda_3.setGeometry(QtCore.QRect(1080, 80, 381, 431))
        self.group_lda_3.setObjectName("group_lda_3")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.group_lda_3)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(30, 30, 321, 381))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem27 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem27)
        self.qd_year1_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_year1_lbl.setObjectName("qd_year1_lbl")
        self.horizontalLayout_5.addWidget(self.qd_year1_lbl)
        spacerItem28 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem28)
        self.qd_year1_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_year1_ledt.setObjectName("qd_year1_ledt")
        self.horizontalLayout_5.addWidget(self.qd_year1_ledt)
        spacerItem29 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem29)
        self.verticalLayout_4.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        spacerItem30 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem30)
        self.qd_year2_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_year2_lbl.setObjectName("qd_year2_lbl")
        self.horizontalLayout_15.addWidget(self.qd_year2_lbl)
        spacerItem31 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem31)
        self.qd_year2_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_year2_ledt.setObjectName("qd_year2_ledt")
        self.horizontalLayout_15.addWidget(self.qd_year2_ledt)
        spacerItem32 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem32)
        self.verticalLayout_4.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        spacerItem33 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem33)
        self.qd_year3_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_year3_lbl.setObjectName("qd_year3_lbl")
        self.horizontalLayout_16.addWidget(self.qd_year3_lbl)
        spacerItem34 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem34)
        self.qd_year3_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_year3_ledt.setObjectName("qd_year3_ledt")
        self.horizontalLayout_16.addWidget(self.qd_year3_ledt)
        spacerItem35 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem35)
        self.verticalLayout_4.addLayout(self.horizontalLayout_16)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        spacerItem36 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem36)
        self.qd_year4_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_year4_lbl.setObjectName("qd_year4_lbl")
        self.horizontalLayout_17.addWidget(self.qd_year4_lbl)
        spacerItem37 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem37)
        self.qd_year4_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_year4_ledt.setObjectName("qd_year4_ledt")
        self.horizontalLayout_17.addWidget(self.qd_year4_ledt)
        spacerItem38 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem38)
        self.verticalLayout_4.addLayout(self.horizontalLayout_17)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem39 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem39)
        self.qd_dur_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_dur_lbl.setObjectName("qd_dur_lbl")
        self.horizontalLayout_6.addWidget(self.qd_dur_lbl)
        spacerItem40 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem40)
        self.qd_dur_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_dur_ledt.setObjectName("qd_dur_ledt")
        self.horizontalLayout_6.addWidget(self.qd_dur_ledt)
        spacerItem41 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem41)
        self.verticalLayout_4.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        spacerItem42 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem42)
        self.qd_n_topics_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.qd_n_topics_lbl.setObjectName("qd_n_topics_lbl")
        self.horizontalLayout_18.addWidget(self.qd_n_topics_lbl)
        spacerItem43 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem43)
        self.qd_n_topics_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.qd_n_topics_ledt.setObjectName("qd_n_topics_ledt")
        self.horizontalLayout_18.addWidget(self.qd_n_topics_ledt)
        spacerItem44 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_18.addItem(spacerItem44)
        self.verticalLayout_4.addLayout(self.horizontalLayout_18)
        self.tabWidget.addTab(self.tab_2, "")


        # ## Tab 3 主题余弦相似度
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.cos_button = QtWidgets.QPushButton(self.tab_3)
        self.cos_button.setGeometry(QtCore.QRect(670, 710, 171, 41))
        self.cos_button.setObjectName("cos_button")
        self.group_lda_4 = QtWidgets.QGroupBox(self.tab_3)
        self.group_lda_4.setGeometry(QtCore.QRect(130, 50, 461, 661))
        self.group_lda_4.setObjectName("group_lda_4")
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.group_lda_4)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(40, 40, 341, 171))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        spacerItem45 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_19.addItem(spacerItem45)
        self.cos_attr_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.cos_attr_lbl.setObjectName("cos_attr_lbl")
        self.horizontalLayout_19.addWidget(self.cos_attr_lbl)
        spacerItem46 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_19.addItem(spacerItem46)
        self.cos_attr_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.cos_attr_ledt.setObjectName("cos_attr_ledt")
        self.horizontalLayout_19.addWidget(self.cos_attr_ledt)
        self.verticalLayout_5.addLayout(self.horizontalLayout_19)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        spacerItem47 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem47)
        self.cos_n_topics_1_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.cos_n_topics_1_lbl.setObjectName("cos_n_topics_1_lbl")
        self.horizontalLayout_20.addWidget(self.cos_n_topics_1_lbl)
        spacerItem48 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_20.addItem(spacerItem48)
        self.cos_n_topics_1_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.cos_n_topics_1_ledt.setObjectName("cos_n_topics_1_ledt")
        self.horizontalLayout_20.addWidget(self.cos_n_topics_1_ledt)
        self.verticalLayout_5.addLayout(self.horizontalLayout_20)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        spacerItem49 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_21.addItem(spacerItem49)
        self.cos_n_topics_2_lbl = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.cos_n_topics_2_lbl.setObjectName("cos_n_topics_2_lbl")
        self.horizontalLayout_21.addWidget(self.cos_n_topics_2_lbl)
        spacerItem50 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_21.addItem(spacerItem50)
        self.cos_n_topics_2_ledt = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.cos_n_topics_2_ledt.setObjectName("cos_n_topics_2_ledt")
        self.horizontalLayout_21.addWidget(self.cos_n_topics_2_ledt)
        self.verticalLayout_5.addLayout(self.horizontalLayout_21)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.group_lda_4)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 260, 154, 271))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.time_window_layout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.time_window_layout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.time_window_layout.setContentsMargins(0, 0, 0, 0)
        self.time_window_layout.setObjectName("time_window_layout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout.addWidget(self.label_5)
        spacerItem51 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem51)
        self.time_window_layout.addLayout(self.horizontalLayout)
        # # 时间窗区间
        self.count = 0 # 套件id
        self.spacer_count = 1 # 弹簧id
        self.interval_layout_ = globals()
        self.spacer_ = globals()
        self.lineEdit_begin = globals()
        self.lbl_ = globals()
        self.lineEdit_end = globals()
        self.add_interval()

        self.add_button = QtWidgets.QPushButton(self.group_lda_4)
        self.add_button.setGeometry(QtCore.QRect(240, 370, 21, 21))
        self.add_button.setObjectName("add_button")
        self.tabWidget.addTab(self.tab_3, "")

        # ## Tab 4 桑基图
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.sankey_button = QtWidgets.QPushButton(self.tab_4)
        self.sankey_button.setGeometry(QtCore.QRect(240, 740, 121, 31))
        self.sankey_button.setObjectName("sankey_button")
        self.label_4 = QtWidgets.QLabel(self.tab_4)
        self.label_4.setGeometry(QtCore.QRect(40, 40, 1501, 651))
        self.label_4.setObjectName("label_4")
        self.browser_2 = QWebEngineView(self.tab_4)
        self.browser_2.setGeometry(QtCore.QRect(40, 40, 1500, 650))
        self.browser_2.setObjectName("web_browser_2")
        self.tabWidget.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1600, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # 退出
        self.actionquit = QtWidgets.QAction(MainWindow)
        self.actionquit.setObjectName("actionquit")
        self.actionquit.triggered.connect(QCoreApplication.instance().quit)
        # 帮助
        self.actionhelp = QtWidgets.QAction(MainWindow)
        self.actionhelp.setObjectName("actionhelp")
        self.actionhelp.triggered.connect(lambda: print("有问题+vFlurry4g"))
        self.menu.addAction(self.actionquit)
        self.menu.addAction(self.actionhelp)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        # self.tabWidget.setCurrentIndex(4)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "可视化分析"))
        self.connect_button.setText(_translate("MainWindow", "连接"))
        self.db_lbl.setText(_translate("MainWindow", "数据库："))
        self.tb_lbl.setText(_translate("MainWindow", "  表： "))
        self.user_lbl.setText(_translate("MainWindow", " 用户： "))
        self.pwd_lbl.setText(_translate("MainWindow", " 密码： "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_0), _translate("MainWindow", "Tab 0"))
        self.perplexity_button.setText(_translate("MainWindow", "困惑度曲线"))
        # self.label.setText(_translate("MainWindow", "LDA"))
        # self.label_2.setText(_translate("MainWindow", "困惑度"))
        self.group_lda.setTitle(_translate("MainWindow", "LDA主题模型"))
        self.lda_year1_lbl.setText(_translate("MainWindow", "year1"))
        self.lda_year2_lbl.setText(_translate("MainWindow", "year2"))
        self.lda_attr_lbl.setText(_translate("MainWindow", "attr"))
        self.lda_n_topics_lbl.setText(_translate("MainWindow", "n_topics"))
        self.lda_n_top_words_lbl.setText(_translate("MainWindow", "n_top_words"))
        self.lda_button.setText(_translate("MainWindow", "LDA主题模型训练"))
        self.group_lda_2.setTitle(_translate("MainWindow", "困惑度曲线"))
        self.p_n_max_topics_lbl.setText(_translate("MainWindow", "n_max_topics"))
        self.data_process_button.setText(_translate("MainWindow", "数据预处理"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("MainWindow", "Tab 1"))
        self.qiangdu_button.setText(_translate("MainWindow", "主题强度"))
        self.qiangdu_pic_button_1.setText(_translate("MainWindow", "曲折"))
        self.qiangdu_pic_button_2.setText(_translate("MainWindow", "下降"))
        self.qiangdu_pic_button_3.setText(_translate("MainWindow", "上升"))
        self.group_lda_3.setTitle(_translate("MainWindow", "主题强度"))
        self.qd_year1_lbl.setText(_translate("MainWindow", "year1"))
        self.qd_year2_lbl.setText(_translate("MainWindow", "year2"))
        self.qd_year3_lbl.setText(_translate("MainWindow", "year3"))
        self.qd_year4_lbl.setText(_translate("MainWindow", "year4"))
        self.qd_dur_lbl.setText(_translate("MainWindow", "dur"))
        self.qd_n_topics_lbl.setText(_translate("MainWindow", "n_topics"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.cos_button.setText(_translate("MainWindow", "主题余弦相似度"))
        self.group_lda_4.setTitle(_translate("MainWindow", "相邻时间窗下主题余弦相似度"))
        self.cos_attr_lbl.setText(_translate("MainWindow", "attr"))
        self.cos_n_topics_1_lbl.setText(_translate("MainWindow", "n_topics_1"))
        self.cos_n_topics_2_lbl.setText(_translate("MainWindow", "n_topics_2"))
        self.label_5.setText(_translate("MainWindow", "时间窗"))
        # self.label_12.setText(_translate("MainWindow", "-"))
        self.add_button.setText(_translate("MainWindow", "+"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Tab 3"))
        self.sankey_button.setText(_translate("MainWindow", "桑基图"))
        self.label_4.setText(_translate("MainWindow", "桑基图"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Tab 4"))
        self.menu.setTitle(_translate("MainWindow", "开始"))
        self.actionquit.setText(_translate("MainWindow", "退出"))
        self.actionhelp.setText(_translate("MainWindow", "帮助"))

        self.connect_button.clicked.connect(self.connect_database)
        self.add_button.clicked.connect(self.add_interval)
        self.lda_button.clicked.connect(self.show_web)
        self.data_process_button.clicked.connect(self.process_1)
        self.perplexity_button.clicked.connect(self.show_perplexity)
        self.qiangdu_button.clicked.connect(self.process_2)
        self.qiangdu_pic_button_1.clicked.connect( self.qiangdu_pic_1 )
        self.qiangdu_pic_button_2.clicked.connect(self.qiangdu_pic_2)
        self.qiangdu_pic_button_3.clicked.connect(self.qiangdu_pic_3)
        self.cos_button.clicked.connect(self.process_3)
        self.sankey_button.clicked.connect(self.process_4)

        self.yuzhicanshu()

    # LDA 困惑度
    def process_1(self):
        # DONE_TODO 接收参数
        # user = 'root'
        # pwd = 'Xy213592'
        # db = 'patent_for_test'
        # DONE_TODO time_window 中的 表名、筛选依据的属性名（‘时间’）、起止点（2020、2021） 要额外设计控件接收
        # time_window = "SELECT * FROM `专利31000_for_test` WHERE `时间` >= 2020 AND `时间` <= 2021 "
        # n_topics = 30
        # n_top_words = 30
        # TODO n_t 用不用参数接收
        n_t = 49

        year1, year2, attr, n_topics, n_top_words, n_max_topics = self.get_para_1()
        time_window = "SELECT * FROM `{0}` WHERE `{1}` >= {2} AND `{1}` <= {3} ".format(self.tb,attr,year1,year2)

        try:
            self.x, self.y = data_process.process_1(self.user, self.pwd, self.db, time_window,n_topics,n_top_words,n_max_topics,n_t)
        except:
            QMessageBox.about(None, "提示", "检查数据库信息")
        print(self.y)
        print(self.x)

    # lda可视化
    def show_web(self):
        # FIXME 打包后可能要出事，先这么写着
        try:
            self.browser.load(QUrl("file:///D:/MyRepository/sptr/pythonProject/lda_pass30.html"))
            self.browser.show()
            print("perplexity")
        except:
            QMessageBox.about(None, "提示", "无可用资源")

    # 困惑度曲线
    def show_perplexity(self):
        print("self.y")
        print(self.y)
        if (self.y == []):
            QMessageBox.about(None, "提示", "无数据")
        else:
            self.pw1.plot(self.y, pen=(255, 0, 0), name="curve")


    # 主题强度
    def process_2(self):
        year1, year2, year3, year4, dur, n_topics = self.get_para_2()
        #TODO　补attr
        # self.zqd = qiangdu.process_2(self.user, self.pwd, self.db, self.tb, "时间", year1, year2, dur, year3, year4, n_topics)


    def qiangdu_pic_1(self):
        list1 = [0, 1, 4, 6, 7, 14, 18, 19, 20, 21, 22, 25, 26]
        self.show_intensity(list1)

    def qiangdu_pic_2(self):
        list2 = [2, 5, 11, 12, 13, 16, 17]
        self.show_intensity(list2)

    def qiangdu_pic_3(self):
        list3 = [3, 8, 9, 10, 15, 23, 24]
        self.show_intensity(list3)

    def show_intensity(self,list):
        self.zqd = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.014120772053004216, 0.014232597558808069, 0.055581629004308644, 0.014605137279340498, 0.014084524732901595, 0.09430013410158365, 0.015007476365478105, 0.014084525039263622, 0.014500731008456077, 0.08584001375638296, 0.35245209060487265, 0.014084535177465704, 0.014084526370090271, 0.014124719500772591, 0.01408453083553556, 0.09681103246271681, 0.01522622939648889, 0.014084522809530342, 0.014084522814925091, 0.014200983005436972, 0.01408453075798959, 0.014084527281427507, 0.01468727012671876, 0.014313412265729249, 0.014084535824371469, 0.014084519221018051, 0.01506597064538266], [0.07613873233072473, 0.02019701494293033, 0.015446467079474903, 0.07869710549171414, 0.05194500224980369, 0.04029191035682744, 0.04898272692124736, 0.015579940822038665, 0.020376994594041006, 0.02515812300246166, 0.023109812150012673, 0.0802947724559533, 0.02258772417920669, 0.013613208458162161, 0.024261304055740274, 0.07191982864721706, 0.11934149270880838, 0.022212862298699315, 0.015609522587158158, 0.02274252941110343, 0.01877149320987487, 0.0137564014552424, 0.04675010779219685, 0.013421393766297704, 0.013393627651041162, 0.03976857950400919, 0.045631321878012464], [0.022136957174410568, 0.010360541659091414, 0.011093525466578871, 0.0123665578704532, 0.01032809600088397, 0.15465848130775933, 0.01066507288007646, 0.010893455163030606, 0.11768155014501532, 0.013293103445060279, 0.03351445966559657, 0.010694974406436353, 0.010593149253209744, 0.011026922873370289, 0.0223338066373628, 0.10327539729064085, 0.09780823374519591, 0.013001680783232526, 0.010439561324583247, 0.08371771249648954, 0.02328936416179283, 0.020977809630081192, 0.05084326284058386, 0.046631714717909105, 0.011726577339751847, 0.04627941961386497, 0.030368612107538415], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.041124672972532576, 0.009918907296789804, 0.021243166332418975, 0.02740367134912924, 0.016740079122399214, 0.049617011880690225, 0.035706582744201736, 0.030890336127381502, 0.04861436704903364, 0.03677782364192673, 0.08251937613935534, 0.010013782099837526, 0.04678697126937945, 0.010155272504884735, 0.036202864533712985, 0.1060778221500558, 0.04547605377147078, 0.05863530405368772, 0.018486466764044175, 0.028977675794618227, 0.023642469012493787, 0.028609556187592734, 0.08387189118254283, 0.040503380918291164, 0.013069648389081137, 0.031161414232124564, 0.01777343248032341], [0.06132708114799902, 0.033136121643899875, 0.026827475519603128, 0.06216492128192517, 0.05208959163061204, 0.04286353734021132, 0.05824346326446319, 0.0348852968520202, 0.023045508227379347, 0.03297410234682897, 0.012701063307651667, 0.017916082860338266, 0.03629284184249118, 0.027148275217194005, 0.02839072759899756, 0.02397455858548593, 0.02034443596319001, 0.02035421262473125, 0.029238033162798695, 0.0413677087153903, 0.026413842037094536, 0.058050484254118184, 0.03608220316074674, 0.059715144265979646, 0.012536138802654358, 0.06385411922837556, 0.05806302911781987], [0.03620483848170775, 0.041952386562497446, 0.016507401806848458, 0.04728344607559943, 0.044681630060490765, 0.03659401227379547, 0.02811316230370268, 0.03881459401526308, 0.026936197465183043, 0.07035141599952367, 0.018510349271307423, 0.0199806603121023, 0.012867735056887031, 0.03709861251174737, 0.041204699060461245, 0.14162892465679858, 0.013351759730549972, 0.03715866906130221, 0.04794739925164239, 0.036373883844834864, 0.022580754553036854, 0.04618014329973154, 0.02133740109204348, 0.034526839343000444, 0.012611867249882105, 0.04354249451587473, 0.025658722144185665], [0.019779492440962936, 0.043044367459730275, 0.020968229172914566, 0.042864941949529826, 0.04623195607864306, 0.028305996722113546, 0.06866279373448549, 0.0236055921966726, 0.03919182490618585, 0.05411769838784981, 0.033043385774994244, 0.01948875739058011, 0.03564151377398783, 0.0382261889286308, 0.05027013005366799, 0.03298320198961866, 0.03623895443426102, 0.04524659615904358, 0.03441118852792714, 0.03632514102339169, 0.030905741722267458, 0.05992557661547893, 0.032825993976617146, 0.031217953460945178, 0.02240888661198022, 0.04120208395620824, 0.032865812551311824], [0.029017277222188186, 0.05807811225086555, 0.030340055997989446, 0.03826293955382398, 0.03728875877518367, 0.03713871996695206, 0.05509137124809868, 0.04017598290227622, 0.03461912070204023, 0.048681522933255034, 0.026829358861230657, 0.023211004578408766, 0.03844913804081425, 0.022129993569621403, 0.02403726617691933, 0.03138302181173669, 0.04817426151113418, 0.05439593663826452, 0.045271957789342065, 0.03087133032649208, 0.02932354510348511, 0.041020765016977316, 0.03187846723716853, 0.028644167009973576, 0.022492903534372638, 0.058198551451879084, 0.034994469789506814], [0.03619546147336258, 0.04899466106501967, 0.029039038781646632, 0.039013781783682346, 0.04050133002427435, 0.04480435507137942, 0.031855579742101875, 0.043465785997878266, 0.03795764506932412, 0.03039533670612638, 0.03898510191414611, 0.030491690115465934, 0.03678401970534496, 0.03305998455734333, 0.03230024002628975, 0.03190949518434279, 0.03655848488153699, 0.03971027465680969, 0.04542554573532455, 0.037974435970418996, 0.03232824265394247, 0.027815820909166178, 0.03507998216505614, 0.03457466993319717, 0.031901322750580156, 0.05377048389543144, 0.039107229230807734]]
        nianfen = []
        for i in range(0, 22, 2):
            a = i + 2000
            nianfen.append(a)
        markers = ['o', 's', '^', 'p', '.', 'v',
                   ',', 'd', 'h', '2', 'x',
                   '4', 'd', '+', 'v', 'x']
        self.figure.clear()
        ax1 = self.figure.add_subplot(111)
        ax1.set_xticks(np.arange(len(nianfen)), labels=nianfen)
        plt.setp(ax1.get_xticklabels(), rotation=45, ha="right",
                 rotation_mode="anchor")
        for i, b in zip(list, markers):
            linshi = []
            for m in self.zqd:
                linshi.append(m[i])
            ax1.plot(nianfen, linshi, marker=b, markersize=6, label='topic_' + str(i + 1))
        ax1.legend(loc='best')
        ax1.set_xlabel('year')
        ax1.set_ylabel('Intensity of theme')
        self.canvas.draw()

    # 余弦相似度
    def process_3(self):
        # user = 'root'
        # pwd = 'Xy213592'
        # db = 'patent_for_test'
        # tb = "专利31000_test_2"
        # attr = "时间"
        # yr3, yr1, yr2 = 2008, 2009, 2011
        attr, n_topics_1, n_topics_2, tm_begin, tm_end = self.get_para_3()
        # DONE_TODO 多线程
        threads = []
        for index in range(self.count-1):
            statement1, statement2 = "",""
            if str.isdigit(tm_begin[index]) == False:
                y2 = int( tm_end[index] )
                y3 = int( tm_begin[index+1] )
                y4 = int( tm_end[index+1] )
                statement1 = "SELECT * FROM `{0}` WHERE `{1}` <= {2}  ".format(self.tb,attr,y2)
                statement2 = "SELECT * FROM `{0}` WHERE `{1}` >= {2} AND `{1}` <= {3}".format(self.tb,attr,y3,y4)
            else :
                y1 = int(tm_end[index])
                y2 = int(tm_end[index])
                y3 = int(tm_begin[index + 1])
                y4 = int(tm_end[index + 1])
                statement1 = "SELECT * FROM `{0}` WHERE `{1}` >= {2} AND `{1}` <= {3}".format(self.tb, attr, y1, y2)
                statement2 = "SELECT * FROM `{0}` WHERE `{1}` >= {2} AND `{1}` <= {3}".format(self.tb, attr, y3, y4)
            print( "i:{}".format(index))
            print( statement1)
            print( statement2)
            t = threading.Thread(target=cos.cos_similarity,
                                 args=(self.user, self.pwd, self.db,statement1, statement2))  # target是要执行的函数名（不是函数），args是函数对应的参数，以元组的形式存在
            threads.append(t)
            # cos.cos_similarity(self.user, self.pwd, self.db, statement1,statement2)
        flag = 0
        for t in threads:
            t.setDaemon(True)
            t.start()
            t.join()
            print( "FLAG: {}".format(flag))
            flag += 1



    # 关联规则 桑基图
    def process_4(self):
        glgl.shuchu()
        sankey.sankey_diagram()
        self.show_web_2()

    # 展示桑吉图
    def show_web_2(self):
        # FIXME 打包后可能要出事，先这么写着
        try:
            self.browser_2.load(QUrl("file:///D:/MyRepository/sptr/pythonProject/桑基图.html"))
            self.browser_2.show()
            print("perplexity")
        except:
            QMessageBox.about(None, "提示", "无可用资源")

    # 接收参数连接数据库
    def connect_database(self):
        if self.db_ledt.text().strip()=="" or self.tb_ledt.text().strip()=="" or self.user_ledt.text().strip()=="" or self.db_ledt.text().strip()=="":
            QMessageBox.about(None, "提示", "请重新检查输入")
        else:
            self.user = self.user_ledt.text().strip()
            self.pwd = self.pwd_ledt.text().strip()
            self.db = self.db_ledt.text().strip()
            self.tb = self.tb_ledt.text().strip()
            print( self.user)
            print( self.pwd)
            print( self.db)
            print( self.tb)
            try:
                conn = pymysql.connect(host='localhost', port=3306, user=self.user, password=self.pwd, db=self.db)
                cur = conn.cursor()
                cur.execute( "SELECT * FROM `{0}`".format(self.tb) )
                cur.close()
                conn.close()
                QMessageBox.about(None, "提示", "连接成功")
                self.isconnected = True
            except:
                QMessageBox.about(None, "提示", "信息错误")
                self.user_ledt.clear()
                self.pwd_ledt.clear()
                self.db_ledt.clear()
                self.tb_ledt.clear()

    def get_para_1(self):
        try:
            year1 = self.lda_year1_ledt.text().strip()
            year2 = self.lda_year2_ledt.text().strip()
            attr = self.lda_attr_ledt.text().strip()
            n_topics = self.lda_n_topics_ledt.text().strip()
            n_top_words = self.lda_n_top_words_ledt.text().strip()
            n_max_topics = self.p_n_max_topics_ledt.text().strip()
            return year1,year2,attr,n_topics,n_top_words,n_max_topics
        except:
            QMessageBox.about(None, "提示", "检查数据")

    def get_para_2(self):
        try:
            year1,year2,year3,year4 = self.qd_year1_ledt.text().strip(),self.qd_year2_ledt.text().strip(),self.qd_year3_ledt.text().strip(),self.qd_year4_ledt.text().strip()
            dur = self.qd_dur_ledt.text().strip()
            n_topics = self.lda_n_topics_ledt.text().strip()
            return year1,year2,year3,year4,dur,n_topics
        except:
            QMessageBox.about(None, "提示", "检查数据")

    def get_para_3(self):
        # DONE_TODO 时间窗参数接收
        try:
            attr = self.cos_attr_ledt.text().strip()
            n_topics_1 = self.cos_n_topics_1_ledt.text().strip()
            n_topics_2 = self.cos_n_topics_2_ledt.text().strip()
            tm_begin, tm_end = [], []
            for i in range(self.count):
                tm_begin.append( (self.lineEdit_begin["lineEdit_begin_{}".format(i + 1)]).text().strip())
                tm_end.append( (self.lineEdit_end["lineEdit_end_{}".format(i+1)]).text().strip() )
            print( tm_begin )
            print( tm_end )
            return attr,n_topics_1,n_topics_2,tm_begin,tm_end
        except:
            QMessageBox.about(None, "提示", "检查数据")

    def add_interval(self):
        self.count += 1
        _translate = QtCore.QCoreApplication.translate
        # 图层
        self.interval_layout_["interval_layout_{}".format(self.count)] = QtWidgets.QHBoxLayout()
        self.interval_layout_["interval_layout_{}".format(self.count)].setObjectName(
            "interval_layout_{}".format(self.count))
        # 左一弹簧
        self.spacer_["spacer_{}".format(self.spacer_count)] = QtWidgets.QSpacerItem(40, 20,
                                                                                    QtWidgets.QSizePolicy.Expanding,
                                                                                    QtWidgets.QSizePolicy.Minimum)
        # self.spacer_["spacer_{}".format(self.spacer_count)].setObjectName(
        #     "spacer_{}".format(self.spacer_count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addItem(
            self.spacer_["spacer_{}".format(self.spacer_count)])
        self.spacer_count += 1
        # 左一输入框
        self.lineEdit_begin["lineEdit_begin_{}".format(self.count)] = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_begin["lineEdit_begin_{}".format(self.count)].setObjectName(
            "lineEdit_begin_{}".format(self.count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addWidget(
            self.lineEdit_begin["lineEdit_begin_{}".format(self.count)])
        # 中间第一个弹簧
        self.spacer_["spacer_{}".format(self.spacer_count)] = QtWidgets.QSpacerItem(40, 20,
                                                                                    QtWidgets.QSizePolicy.Expanding,
                                                                                    QtWidgets.QSizePolicy.Minimum)
        # self.spacer_["spacer_{}".format(self.spacer_count)].setObjectName(
        #     "spacer_{}".format(self.spacer_count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addItem(
            self.spacer_["spacer_{}".format(self.spacer_count)])
        self.spacer_count += 1
        # 中间label
        self.lbl_["lbl_{}".format(self.count)] = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.lbl_["lbl_{}".format(self.count)].setObjectName(
            "lbl_{}".format(self.count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addWidget(self.lbl_["lbl_{}".format(self.count)])
        # 中间第二个弹簧
        self.spacer_["spacer_{}".format(self.spacer_count)] = QtWidgets.QSpacerItem(40, 20,
                                                                                    QtWidgets.QSizePolicy.Expanding,
                                                                                    QtWidgets.QSizePolicy.Minimum)
        # self.spacer_["spacer_{}".format(self.spacer_count)].setObjectName(
        #     "spacer_{}".format(self.spacer_count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addItem(
            self.spacer_["spacer_{}".format(self.spacer_count)])
        self.spacer_count += 1
        # 右一输入框
        self.lineEdit_end["lineEdit_end_{}".format(self.count)] = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_end["lineEdit_end_{}".format(self.count)].setObjectName(
            "lineEdit_end_{}".format(self.count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addWidget(
            self.lineEdit_begin["lineEdit_end_{}".format(self.count)])
        # 最后一个弹簧
        self.spacer_["spacer_{}".format(self.spacer_count)] = QtWidgets.QSpacerItem(40, 20,
                                                                                    QtWidgets.QSizePolicy.Expanding,
                                                                                    QtWidgets.QSizePolicy.Minimum)
        # self.spacer_["spacer_{}".format(self.spacer_count)].setObjectName(
        #     "spacer_{}".format(self.spacer_count))
        self.interval_layout_["interval_layout_{}".format(self.count)].addItem(
            self.spacer_["spacer_{}".format(self.spacer_count)])
        self.spacer_count += 1
        self.time_window_layout.addLayout(self.interval_layout_["interval_layout_{}".format(self.count)])

    # 参数预置，省得手打
    def yuzhicanshu(self):
        self.user_ledt.setText('root')
        self.pwd_ledt.setText('Xy213592')
        self.db_ledt.setText('patent_for_test')
        self.tb_ledt.setText('专利31000_test_2')

        self.lda_year1_ledt.setText("2020")
        self.lda_year2_ledt.setText("2021")
        self.lda_attr_ledt.setText("时间")
        self.lda_n_topics_ledt.setText("30")
        self.lda_n_top_words_ledt.setText("30")
        self.p_n_max_topics_ledt.setText("50")

        self.qd_year1_ledt.setText("2000")
        self.qd_year2_ledt.setText("2022")
        self.qd_year3_ledt.setText("2000")
        self.qd_year4_ledt.setText("2021")
        self.qd_dur_ledt.setText("2")
        self.qd_n_topics_ledt.setText("27")

        self.cos_attr_ledt.setText("时间")
        self.cos_n_topics_1_ledt.setText("21")
        self.cos_n_topics_2_ledt.setText("19")