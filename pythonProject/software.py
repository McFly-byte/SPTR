# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'software.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import numpy as np
from PyQt5.QtCore import QUrl, QObject, pyqtSignal
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
from PyQt5.QtWidgets import QMessageBox, QMainWindow, QWidget

import data_process


# ### 自定义信号槽，可实现带参槽函数
# 信号对象
class QTypeSignal(QObject):
	# 定义一个信号
	sendmsg = pyqtSignal(object,object)

	def __init__(self):
		super(QTypeSignal, self).__init__()

	# def run(self):
	# 	# 发射信号
	# 	self.sendmsg.emit([1,2,3,4],[11,12,12,34])
X = []
Y = []
# 槽对象
class QTypeSlot(QObject):
	def __init__(self):
		super(QTypeSlot, self).__init__()

	# 槽对象里的槽函数
	def get(self, x=[], y=[]):
		global X,Y
		X = x
		Y = y


# #### 主界面
class Ui_MainWindow(QMainWindow):

    x,y = [],[]

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lda_button = QtWidgets.QPushButton(self.centralwidget)
        self.lda_button.setGeometry(QtCore.QRect(140, 120, 171, 41))
        self.lda_button.setObjectName("lda_button")
        self.perplexity_button = QtWidgets.QPushButton(self.centralwidget)
        self.perplexity_button.setGeometry(QtCore.QRect(140, 180, 171, 41))
        self.perplexity_button.setObjectName("perplexity_button")
        self.qiangdu_button = QtWidgets.QPushButton(self.centralwidget)
        self.qiangdu_button.setGeometry(QtCore.QRect(140, 250, 171, 41))
        self.qiangdu_button.setObjectName("qiangdu_button")
        self.data_process_button = QtWidgets.QPushButton(self.centralwidget)
        self.data_process_button.setGeometry(QtCore.QRect(140, 50, 171, 41))
        self.data_process_button.setObjectName("data_process_button")
        self.cos_button = QtWidgets.QPushButton(self.centralwidget)
        self.cos_button.setGeometry(QtCore.QRect(140, 320, 171, 41))
        self.cos_button.setObjectName("cos_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # connect
        self.data_process_button.clicked.connect(self.process)
        self.perplexity_button.clicked.connect( self.show_perplexity )

        ## 创建web窗体
        self.browser = QWebEngineView()
        self.browser.setGeometry(0, 0, 1600, 900)
        self.lda_button.clicked.connect(self.show_web)

        # 信号槽机制
        # self.SEND = QTypeSignal()
        # self.SLOT = QTypeSlot()
        # self.SEND.sendmsg.connect(self.SLOT.get)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "主题模型可视化"))
        self.lda_button.setText(_translate("MainWindow", "LDA主题模型训练"))
        self.perplexity_button.setText(_translate("MainWindow", "困惑度曲线"))
        self.qiangdu_button.setText(_translate("MainWindow", "主题强度"))
        self.data_process_button.setText(_translate("MainWindow", "数据预处理"))
        self.cos_button.setText(_translate("MainWindow", "相邻时间窗下主题余弦相似度"))
        self.menu.setTitle(_translate("MainWindow", "开始"))

    def process(self):
        self.x,self.y = data_process.process()
        print( self.y )
        print( self.x )

    # lda可视化
    def show_web(self):
        # TODO 打包后可能要出事，先这么写着
        try:
            self.browser.load(QUrl("file:///D:/MyRepository/sptr/pythonProject/lda_pass30.html"))
            self.browser.show()
        except:
            QMessageBox.about(None, "提示", "无可用资源")

    # 困惑度曲线
    def show_perplexity(self):
        print( "self.y" )
        print( self.y )
        if( self.y == [] ):
            QMessageBox.about(None, "提示", "无数据")
        else :
            # TODO 鼠标移动显示坐标
            # win = pg.GraphicsLayoutWidget(show=True, title="困惑度曲线")
            # win.resize(1000, 600)
            # Enable antialiasing for prettier plots
            # pg.setConfigOption('background', 'w')
            pg.setConfigOptions(antialias=True)
            # p = win.addPlot(title="困惑度曲线")
            pg.plot(self.y, pen=(255, 0, 0), name="curve")
            pg.exec()

